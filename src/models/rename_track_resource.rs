/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.13.3.4711
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RenameTrackResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "artistId", skip_serializing_if = "Option::is_none")]
    pub artist_id: Option<i32>,
    #[serde(rename = "albumId", skip_serializing_if = "Option::is_none")]
    pub album_id: Option<i32>,
    #[serde(rename = "trackNumbers", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub track_numbers: Option<Option<Vec<i32>>>,
    #[serde(rename = "trackFileId", skip_serializing_if = "Option::is_none")]
    pub track_file_id: Option<i32>,
    #[serde(rename = "existingPath", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub existing_path: Option<Option<String>>,
    #[serde(rename = "newPath", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub new_path: Option<Option<String>>,
}

impl RenameTrackResource {
    pub fn new() -> RenameTrackResource {
        RenameTrackResource {
            id: None,
            artist_id: None,
            album_id: None,
            track_numbers: None,
            track_file_id: None,
            existing_path: None,
            new_path: None,
        }
    }
}

