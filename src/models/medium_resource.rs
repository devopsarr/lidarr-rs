/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.9.6.4552
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MediumResource {
    #[serde(rename = "mediumNumber", skip_serializing_if = "Option::is_none")]
    pub medium_number: Option<i32>,
    #[serde(rename = "mediumName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub medium_name: Option<Option<String>>,
    #[serde(rename = "mediumFormat", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub medium_format: Option<Option<String>>,
}

impl MediumResource {
    pub fn new() -> MediumResource {
        MediumResource {
            medium_number: None,
            medium_name: None,
            medium_format: None,
        }
    }
}

