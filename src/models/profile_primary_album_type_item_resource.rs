/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.13.3.4711
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfilePrimaryAlbumTypeItemResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "albumType", skip_serializing_if = "Option::is_none")]
    pub album_type: Option<Box<models::PrimaryAlbumType>>,
    #[serde(rename = "allowed", skip_serializing_if = "Option::is_none")]
    pub allowed: Option<bool>,
}

impl ProfilePrimaryAlbumTypeItemResource {
    pub fn new() -> ProfilePrimaryAlbumTypeItemResource {
        ProfilePrimaryAlbumTypeItemResource {
            id: None,
            album_type: None,
            allowed: None,
        }
    }
}

