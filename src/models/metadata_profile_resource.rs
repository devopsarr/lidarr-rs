/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.13.3.4711
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetadataProfileResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "primaryAlbumTypes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub primary_album_types: Option<Option<Vec<models::ProfilePrimaryAlbumTypeItemResource>>>,
    #[serde(rename = "secondaryAlbumTypes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub secondary_album_types: Option<Option<Vec<models::ProfileSecondaryAlbumTypeItemResource>>>,
    #[serde(rename = "releaseStatuses", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub release_statuses: Option<Option<Vec<models::ProfileReleaseStatusItemResource>>>,
}

impl MetadataProfileResource {
    pub fn new() -> MetadataProfileResource {
        MetadataProfileResource {
            id: None,
            name: None,
            primary_album_types: None,
            secondary_album_types: None,
            release_statuses: None,
        }
    }
}

