/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.13.3.4711
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TagDetailsResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "label", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub label: Option<Option<String>>,
    #[serde(rename = "delayProfileIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub delay_profile_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "importListIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub import_list_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "notificationIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notification_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "restrictionIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub restriction_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "indexerIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub indexer_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "downloadClientIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub download_client_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "autoTagIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub auto_tag_ids: Option<Option<Vec<i32>>>,
    #[serde(rename = "artistIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub artist_ids: Option<Option<Vec<i32>>>,
}

impl TagDetailsResource {
    pub fn new() -> TagDetailsResource {
        TagDetailsResource {
            id: None,
            label: None,
            delay_profile_ids: None,
            import_list_ids: None,
            notification_ids: None,
            restriction_ids: None,
            indexer_ids: None,
            download_client_ids: None,
            auto_tag_ids: None,
            artist_ids: None,
        }
    }
}

