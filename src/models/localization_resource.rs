/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.13.3.4711
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LocalizationResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "strings", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub strings: Option<Option<std::collections::HashMap<String, String>>>,
}

impl LocalizationResource {
    pub fn new() -> LocalizationResource {
        LocalizationResource {
            id: None,
            strings: None,
        }
    }
}

