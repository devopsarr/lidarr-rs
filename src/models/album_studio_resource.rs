/*
 * Lidarr
 *
 * Lidarr API docs
 *
 * The version of the OpenAPI document: v2.9.6.4552
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlbumStudioResource {
    #[serde(rename = "artist", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub artist: Option<Option<Vec<models::AlbumStudioArtistResource>>>,
    #[serde(rename = "monitoringOptions", skip_serializing_if = "Option::is_none")]
    pub monitoring_options: Option<Box<models::MonitoringOptions>>,
    #[serde(rename = "monitorNewItems", skip_serializing_if = "Option::is_none")]
    pub monitor_new_items: Option<models::NewItemMonitorTypes>,
}

impl AlbumStudioResource {
    pub fn new() -> AlbumStudioResource {
        AlbumStudioResource {
            artist: None,
            monitoring_options: None,
            monitor_new_items: None,
        }
    }
}

